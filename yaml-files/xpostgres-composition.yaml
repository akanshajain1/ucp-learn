apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xpostgres-composition-ref
  labels:
    provider: default
    guide: ucplearn
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: postgres.database.platform.volvocars.com/v1alpha1
    kind: XCompositePostgreSQLInstance
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels  
  resources:
    # resource-group where the db-server lives in
    - name: resourcegroup
      base:
        apiVersion: azure.crossplane.io/v1alpha3
        kind: ResourceGroup
        spec: {}
      patches:
      - type: PatchSet
        patchSetName: Metadata
      - fromFieldPath: "spec.parameters.location"
        toFieldPath: "spec.location"
    # db-server
    - name: postgresqlserver
      base:
        apiVersion: database.azure.crossplane.io/v1beta1
        kind: PostgreSQLServer
        spec:
          forProvider:
            createMode: Default
            administratorLogin: ucplearnadmin
            resourceGroupNameSelector:
              matchControllerRef: true
            minimalTlsVersion: TLS1_2
            sslEnforcement: Enabled
            sku:
              tier: GeneralPurpose
              capacity: 2
              family: Gen5  
            storageProfile:
              backupRetentionDays: 35
              geoRedundantBackup: Disabled
              storageAutogrow: Disabled
          writeConnectionSecretToRef:
            namespace: crossplane-system
          providerConfigRef:
            name: default
      patches:
      - type: PatchSet
        patchSetName: Metadata
      - fromFieldPath: "metadata.uid"
        toFieldPath: "spec.writeConnectionSecretToRef.name"
        transforms:
        - type: string
          string:
            fmt: "postgresqlserver-admin-%s"
      - fromFieldPath: "spec.parameters.version"
        toFieldPath: "spec.forProvider.version"
      - fromFieldPath: "spec.parameters.location"
        toFieldPath: "spec.forProvider.location"
      - fromFieldPath: "spec.parameters.storageGB"
        toFieldPath: "spec.forProvider.storageProfile.storageMB"
        transforms:
          - type: math
            math:
              multiply: 1024
      # database on the db-server
    - name: postgresqldatabase
      base:
        apiVersion: postgresql.sql.crossplane.io/v1alpha1
        kind: Database
        spec:
          forProvider: {}
      patches:
      - type: PatchSet
        patchSetName: Metadata
      - fromFieldPath: "spec.parameters.dbName"
        toFieldPath: "metadata.annotations[crossplane.io/external-name]"
      - fromFieldPath: "metadata.uid"
        toFieldPath: "spec.providerConfigRef.name"
        transforms:
        - type: string
          string:
            fmt: "sql-provider-config-%s"
      connectionDetails:
        - type: FromFieldPath
          name: database
          fromFieldPath: "metadata.annotations[crossplane.io/external-name]"
    # connection role
    - name: postgresqlrole
      base:
        apiVersion: postgresql.sql.crossplane.io/v1alpha1
        kind: Role
        spec:
          forProvider:
            connectionLimit: 10
            privileges:
              login: true
          writeConnectionSecretToRef:
            namespace: crossplane-system
      patches:
      - type: PatchSet
        patchSetName: Metadata
      - fromFieldPath: "metadata.uid"
        toFieldPath: "spec.providerConfigRef.name"
        transforms:
        - type: string
          string:
            fmt: "sql-provider-config-%s"
      - fromFieldPath: "metadata.uid"
        toFieldPath: "spec.writeConnectionSecretToRef.name"
        transforms:
        - type: string
          string:
            fmt: "postgresqlserver-connect-%s"
      - fromFieldPath: "spec.parameters.dbName"
        toFieldPath: "metadata.annotations[crossplane.io/external-name]"
        transforms:
        - type: string
          string:
            fmt: "connection-%s"
      connectionDetails:
      - fromConnectionSecretKey: username
      - fromConnectionSecretKey: password
      - name: hostname
        fromConnectionSecretKey: endpoint
      - fromConnectionSecretKey: port
    # grants for connection role
    - name: postgresqlgrant
      base:
        apiVersion: postgresql.sql.crossplane.io/v1alpha1
        kind: Grant
        spec:
          forProvider:
            privileges:
              - CREATE
              - CONNECT
              - TEMPORARY
            roleSelector:
              matchControllerRef: true
            databaseSelector:
              matchControllerRef: true
      patches:
      - type: PatchSet
        patchSetName: Metadata
      - fromFieldPath: "metadata.uid"
        toFieldPath: "spec.providerConfigRef.name"
        transforms:
        - type: string
          string:
            fmt: "sql-provider-config-%s"